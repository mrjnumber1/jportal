################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
program_libs = src/libjp.la

# Programs need to link the c++ runtime if everything was compiled statically.
if !ENABLE_SHARED
program_libs += -lstdc++ -lm
endif

lib_LTLIBRARIES += src/libjp.la
pkgconfig_DATA = src/libjp.pc

include_HEADERS = \
    include/jp_prelude.h \
    include/main.h \
    include/app.h \
    include/log.h \
    include/field.h \
    include/sector.h \
    include/crypt/sha1.h \
    include/io/renderqueue.h \
    include/io/chunk.h \
    include/io/input/input.h \
    include/io/input/joy.h \
    include/io/input/mouse.h \
    include/io/input/kb.h \
    include/io/data/item.h \
    include/io/data/npc.h \
    include/io/data/mob.h \
    include/io/data/texture.h \
    include/io/data/config.h \
    include/io/data/field.h \
    include/entity/entity.h \
    include/entity/player.h \
    include/entity/pickup.h \
    include/entity/enemy.h \
    include/timing/event.h \
    include/timing/stopwatch.h \
    include/math/matrix.h \
    include/math/quat.h \
    include/math/vecxy.h \
    include/math/vecxyz.h \
    include/math/plane.h \
    include/container/list.h \
    include/container/stack.h \
    include/container/queue.h \
    include/container/map.h \
    include/jp_library.h

src_libjp_la_SOURCES = \
    src/app.c \
    src/log.c \
    src/field.c \
    src/sector.c \
    src/crypt/sha1.c \
    src/io/renderqueue.c \
    src/io/chunk.c \
    src/io/input/input.c \
    src/io/input/joy.c \
    src/io/input/mouse.c \
    src/io/input/kb.c \
    src/io/data/item.c \
    src/io/data/npc.c \
    src/io/data/mob.c \
    src/io/data/texture.c \
    src/io/data/config.c \
    src/io/data/field.c \
    src/entity/entity.c \
    src/entity/player.c \
    src/entity/pickup.c \
    src/entity/enemy.c \
    src/timing/event.c \
    src/timing/stopwatch.c \
    src/math/matrix.c \
    src/math/quat.c \
    src/math/vecxy.c \
    src/math/vecxyz.c \
    src/math/plane.c \
    src/container/list.c \
    src/container/stack.c \
    src/container/queue.c \
    src/container/map.c \
    src/platform.h

src_libjp_la_CPPFLAGS = ${AM_CPPFLAGS}

src_libjp_la_LDFLAGS = \
    -version-info @LTVER@ \
    $(LIBTOOL_EXTRA_LDFLAGS)

if ON_MINGW
src_libjp_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

if ON_CYGWIN
src_libjp_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

src_libjp_la_LIBADD = ${project_libs}

if ENABLE_MAIN
bin_PROGRAMS += src/main
src_main_CPPFLAGS = ${AM_CPPFLAGS}
src_main_LDADD = ${program_libs}
src_main_SOURCES = src/main.c
endif #ENABLE_MAIN

if ENABLE_JP_SELFTEST
check_PROGRAMS += src/jp_selftest
noinst_PROGRAMS += src/jp_selftest
src_jp_selftest_CPPFLAGS = ${AM_CPPFLAGS}
src_jp_selftest_LDADD = ${program_libs}
src_jp_selftest_SOURCES = src/jp_selftest.c
endif #ENABLE_JP_SELFTEST

# define custom target for all products of /src
src:
	src/main \
	src/jp_selftest \
	src/libjp.la

	cd $(srcdir); gsl -target:- project.xml

check-local: src/jp_selftest
	$(LIBTOOL) --mode=execute $(builddir)/src/jp_selftest

check-verbose: src/jp_selftest
	$(LIBTOOL) --mode=execute $(builddir)/src/jp_selftest -v

# Run the selftest binary under valgrind to check for memory leaks
memcheck: src/jp_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=memcheck \
		--leak-check=full --show-reachable=yes --error-exitcode=1 \
		--suppressions=$(srcdir)/src/.valgrind.supp \
		$(builddir)/src/jp_selftest

# Run the selftest binary under valgrind to check for performance leaks
callcheck: src/jp_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=callgrind \
		$(builddir)/src/jp_selftest

# Run the selftest binary under gdb for debugging
debug: src/jp_selftest
	$(LIBTOOL) --mode=execute gdb -q \
		$(builddir)/src/jp_selftest

# Run the selftest binary with verbose switch for tracing
animate: src/jp_selftest
	$(LIBTOOL) --mode=execute $(builddir)/src/jp_selftest -v

if WITH_GCOV
coverage: src/jp_selftest
	@echo "called configure --with-gcov"
	lcov --base-directory . --directory . --zerocounters -q
	$(MAKE) check
	lcov --base-directory . --directory . --capture -o coverage.info
	lcov --remove coverage.info "/usr*" -o coverage.info
	lcov --remove coverage.info "jp_selftest.c" -o coverage.info
	$(RM) -rf coverage/*
	genhtml -o coverage/ -t "jportalsandbox test coverage" --num-spaces 4 coverage.info
else
coverage: src/jp_selftest
	@echo "call make clean && configure --with-gcov to enable code coverage"
	@exit 1
endif

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
