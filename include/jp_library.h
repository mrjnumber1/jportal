/*  =========================================================================
    jportalsandbox 

    Copyright (c) the Contributors as noted in the AUTHORS file.       
    This file is publically available for educational use by mrj!!!    
                                                                       
    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.           

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
    =========================================================================
*/

#ifndef JP_LIBRARY_H_INCLUDED
#define JP_LIBRARY_H_INCLUDED

//  Set up environment for the application
#include "jp_prelude.h"

//  External dependencies

//  JP version macros for compile-time API detection
#define JP_VERSION_MAJOR 0
#define JP_VERSION_MINOR 0
#define JP_VERSION_PATCH 1

#define JP_MAKE_VERSION(major, minor, patch) \
    ((major) * 1000000 + (minor) * 1000 + (patch))
#define JP_VERSION \
    JP_MAKE_VERSION(JP_VERSION_MAJOR, JP_VERSION_MINOR, JP_VERSION_PATCH)


//  Opaque class structures to allow forward references
//  These classes are stable or legacy and built in all releases
typedef struct _jp_app jp_app;
#define JP_APP_DEFINED
typedef struct _jp_log jp_log;
#define JP_LOG_DEFINED
typedef struct _jp_field jp_field;
#define JP_FIELD_DEFINED
typedef struct _jp_sector jp_sector;
#define JP_SECTOR_DEFINED
typedef struct _jp_crypt_sha1 jp_crypt_sha1;
#define JP_CRYPT_SHA1_DEFINED
typedef struct _jp_io_renderqueue jp_io_renderqueue;
#define JP_IO_RENDERQUEUE_DEFINED
typedef struct _jp_io_chunk jp_io_chunk;
#define JP_IO_CHUNK_DEFINED
typedef struct _jp_io_input_input jp_io_input_input;
#define JP_IO_INPUT_INPUT_DEFINED
typedef struct _jp_io_input_joy jp_io_input_joy;
#define JP_IO_INPUT_JOY_DEFINED
typedef struct _jp_io_input_mouse jp_io_input_mouse;
#define JP_IO_INPUT_MOUSE_DEFINED
typedef struct _jp_io_input_kb jp_io_input_kb;
#define JP_IO_INPUT_KB_DEFINED
typedef struct _jp_io_data_item jp_io_data_item;
#define JP_IO_DATA_ITEM_DEFINED
typedef struct _jp_io_data_npc jp_io_data_npc;
#define JP_IO_DATA_NPC_DEFINED
typedef struct _jp_io_data_mob jp_io_data_mob;
#define JP_IO_DATA_MOB_DEFINED
typedef struct _jp_io_data_texture jp_io_data_texture;
#define JP_IO_DATA_TEXTURE_DEFINED
typedef struct _jp_io_data_config jp_io_data_config;
#define JP_IO_DATA_CONFIG_DEFINED
typedef struct _jp_io_data_field jp_io_data_field;
#define JP_IO_DATA_FIELD_DEFINED
typedef struct _jp_entity_entity jp_entity_entity;
#define JP_ENTITY_ENTITY_DEFINED
typedef struct _jp_entity_player jp_entity_player;
#define JP_ENTITY_PLAYER_DEFINED
typedef struct _jp_entity_pickup jp_entity_pickup;
#define JP_ENTITY_PICKUP_DEFINED
typedef struct _jp_entity_enemy jp_entity_enemy;
#define JP_ENTITY_ENEMY_DEFINED
typedef struct _jp_timing_event jp_timing_event;
#define JP_TIMING_EVENT_DEFINED
typedef struct _jp_timing_stopwatch jp_timing_stopwatch;
#define JP_TIMING_STOPWATCH_DEFINED
typedef struct _jp_math_matrix jp_math_matrix;
#define JP_MATH_MATRIX_DEFINED
typedef struct _jp_math_quat jp_math_quat;
#define JP_MATH_QUAT_DEFINED
typedef struct _jp_math_vecxy jp_math_vecxy;
#define JP_MATH_VECXY_DEFINED
typedef struct _jp_math_vecxyz jp_math_vecxyz;
#define JP_MATH_VECXYZ_DEFINED
typedef struct _jp_math_plane jp_math_plane;
#define JP_MATH_PLANE_DEFINED
typedef struct _jp_container_list jp_container_list;
#define JP_CONTAINER_LIST_DEFINED
typedef struct _jp_container_stack jp_container_stack;
#define JP_CONTAINER_STACK_DEFINED
typedef struct _jp_container_queue jp_container_queue;
#define JP_CONTAINER_QUEUE_DEFINED
typedef struct _jp_container_map jp_container_map;
#define JP_CONTAINER_MAP_DEFINED


//  Public classes, each with its own header file
#include "app.h"
#include "log.h"
#include "field.h"
#include "sector.h"
#include "crypt/sha1.h"
#include "io/renderqueue.h"
#include "io/chunk.h"
#include "io/input/input.h"
#include "io/input/joy.h"
#include "io/input/mouse.h"
#include "io/input/kb.h"
#include "io/data/item.h"
#include "io/data/npc.h"
#include "io/data/mob.h"
#include "io/data/texture.h"
#include "io/data/config.h"
#include "io/data/field.h"
#include "entity/entity.h"
#include "entity/player.h"
#include "entity/pickup.h"
#include "entity/enemy.h"
#include "timing/event.h"
#include "timing/stopwatch.h"
#include "math/matrix.h"
#include "math/quat.h"
#include "math/vecxy.h"
#include "math/vecxyz.h"
#include "math/plane.h"
#include "container/list.h"
#include "container/stack.h"
#include "container/queue.h"
#include "container/map.h"

#endif
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
